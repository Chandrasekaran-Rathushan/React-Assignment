{"version":3,"sources":["redux/actions/types.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store.js","components/album/Album.js","redux/actions/auth.js","components/modal/ModalView.js","components/thumbnail/Thumbnail.js","components/header/NavLink.js","components/header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["LOAD_ALBUMS_SUCCESS","LOAD_ALBUMS_FAILED","LOAD_THUMBNAILS_SUCCESS","LOAD_THUMBNAILS_FAILED","initialState","albums","thumbnails","combineReducers","auth","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ALBUM_ID","connect","load_albums","dispatch","a","axios","get","process","response","data","renderAlbums","useSelector","map","album","className","to","onClick","e","id","title","useEffect","ModalView","props","useState","setShow","Modal","dialogClassName","centered","Header","closeButton","onHide","Title","Body","style","display","margin","src","url","alt","marginTop","Footer","Button","load_thumbnails","setTitle","modalShow","setModalShow","setUrl","renderAllthumbnails","thumbnail","thumbnailUrl","show","NavLink","this","location","pathname","children","React","Component","contextTypes","router","PropTypes","object","withRouter","App","path","exact","component","Album","Thumbnails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f18be88.chunk.js","sourcesContent":["export const LOAD_ALBUMS_SUCCESS = 'LOAD_ALBUMS_SUCCESS';\r\nexport const LOAD_ALBUMS_FAILED = 'LOAD_ALBUMS_FAILED';\r\n\r\nexport const LOAD_THUMBNAILS_SUCCESS = 'LOAD_THUMBNAILS_SUCCESS';\r\nexport const LOAD_THUMBNAILS_FAILED = 'LOAD_THUMBNAILS_FAILED';\r\n\r\n","import {\r\n    LOAD_ALBUMS_SUCCESS,\r\n    LOAD_ALBUMS_FAILED,\r\n    LOAD_THUMBNAILS_SUCCESS,\r\n    LOAD_THUMBNAILS_FAILED,\r\n} from '../actions/types';\r\n\r\n// initial state when application starts\r\nconst initialState = {\r\n    albums: [],\r\n    thumbnails: [],\r\n}\r\n\r\n// reduducer is used to determine the action and chnage the state accordingly.\r\nexport default function auth(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case LOAD_ALBUMS_FAILED:\r\n            return {\r\n                ...state,\r\n                albums: [],\r\n            }\r\n\r\n        case LOAD_THUMBNAILS_FAILED:\r\n            return {\r\n                ...state,\r\n                thumbnails: [],\r\n            }\r\n\r\n\r\n        case LOAD_ALBUMS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                albums: payload\r\n            };\r\n\r\n        case LOAD_THUMBNAILS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                thumbnails: payload\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport auth from './auth.js'\r\n\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { load_albums } from '../../redux/actions/auth';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './album.css';\r\n\r\n// ALBUM_ID used to store selected album id by the user\r\nexport var ALBUM_ID = 0;\r\n\r\nconst Album = ({ load_albums }) => {\r\n    // albums is an array where all album elements are stored\r\n    const albums = useSelector(state => state.auth.albums);\r\n\r\n    const renderAlbums = albums.map((album) => {\r\n        // when user clicks on a album, album id will be stored in ALBUM_ID variable.\r\n        const onClick = e => {\r\n            ALBUM_ID = album.id;\r\n        };\r\n\r\n        return (\r\n            <div className=\"card\" key={album.id}>\r\n                <Link to=\"/photos\" className=\"link\">\r\n                <div className=\"card-body\" onClick={e => onClick(e)}>\r\n                    <h5 className=\"card-title\">Album {album.id}</h5>\r\n                    <p className=\"card-text\">{album.title}</p>\r\n                </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    // useEffect Hook used to get data from api.\r\n    useEffect(() => {\r\n       load_albums();\r\n       // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {renderAlbums}  \r\n        </div>\r\n    );\r\n}\r\nexport default connect(null, { load_albums })(Album);","import {\r\n    LOAD_ALBUMS_SUCCESS,LOAD_ALBUMS_FAILED,\r\n    LOAD_THUMBNAILS_SUCCESS,LOAD_THUMBNAILS_FAILED,\r\n\r\n} from '../actions/types';\r\n\r\nimport axios from 'axios';\r\nimport { ALBUM_ID } from '../../components/album/Album';\r\n\r\n/*\r\n * if axios returns the response without any erros,\r\n * have to dispatch the relevent actions.\r\n */\r\n\r\n// used to get albums list from api\r\nexport const load_albums = () => async dispatch => {\r\n\r\n    try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/albums`);\r\n\r\n        dispatch ({\r\n            type: LOAD_ALBUMS_SUCCESS,\r\n            payload: response.data\r\n        })\r\n        \r\n    }catch(err){\r\n        dispatch ({\r\n            type: LOAD_ALBUMS_FAILED,\r\n        })\r\n    }\r\n};\r\n\r\n// used to get thumbnails list from api\r\nexport const load_thumbnails = () => async dispatch => {\r\n    let response = [];\r\n\r\n    try {\r\n        \r\n        (ALBUM_ID === 0) ?\r\n            // eslint-disable-next-line\r\n            response = await axios.get(`${process.env.REACT_APP_API_URL}/photos`)\r\n        :\r\n            // eslint-disable-next-line\r\n            response = await axios.get(`${process.env.REACT_APP_API_URL}/photos?albumId=${ALBUM_ID}`);\r\n            \r\n        dispatch ({\r\n            type: LOAD_THUMBNAILS_SUCCESS,\r\n            payload: response.data\r\n        })\r\n        \r\n    }catch(err){\r\n        dispatch ({\r\n            type: LOAD_THUMBNAILS_FAILED,\r\n        })\r\n    }\r\n};","import { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction ModalView (props) {\r\n\r\n  // eslint-disable-next-line\r\n  const [show, setShow] = useState(false);\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <Modal\r\n        {...props}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n      >\r\n        <Modal.Header closeButton onHide={() => setShow(false)}>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Image\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{display: 'block', margin: '0 auto'}}>\r\n          <img className=\"card-img-top\" src={props.url} alt=\"img\"/>\r\n          <h5 style={{ marginTop: '1rem'}}>\r\n            {props.title}\r\n          </h5>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            \r\n          <Button onClick={props.onHide}>Close</Button>\r\n            \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n    );\r\n  }\r\n  export default ModalView;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { load_thumbnails } from '../../redux/actions/auth';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport ModalView from '../modal/ModalView';\r\nimport './thumbnail.css';\r\n\r\nconst Thumbnails = ({ load_thumbnails }) => {\r\n    // thumbnails is an array where all thumbnail elements are stored.\r\n    const thumbnails = useSelector(state => state.auth.thumbnails);\r\n\r\n\r\n    /*\r\n    * title useState used to store state of the title of the thumbnail.\r\n    * url useState used to store the state of the thumnail url.\r\n    * modalShow useState used to  change the state of the modal by the user.\r\n    */\r\n    \r\n    const [title, setTitle] = useState(\"\");\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [url, setUrl] = useState('');\r\n\r\n    // when user presses close button on the modal, modal will be closed.\r\n    const onHide = e => {\r\n        setModalShow(false);\r\n    };\r\n\r\n\r\n    const renderAllthumbnails = thumbnails.map((thumbnail) => {\r\n\r\n        // when user clicks on a thumbnail, title and image url will be stored. \r\n        const onClick = e => {\r\n            setUrl(thumbnail.url);\r\n            setTitle(thumbnail.title);\r\n            setModalShow(true);\r\n        };\r\n\r\n        return (\r\n            <div className=\"card\" key={thumbnail.id} onClick={e => onClick(e)}>\r\n                <img className=\"card-img-top\" src={thumbnail.thumbnailUrl} alt=\"img\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{thumbnail.title}</h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    // useEffect Hook used to get data from api.\r\n    useEffect(() => {\r\n        load_thumbnails();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            { renderAllthumbnails }\r\n\r\n            {/* ModaL has been used to show the relevent image of the thumbnail.S */}\r\n            <ModalView show={modalShow} onHide={e => onHide(e)} url={url} title={title}/>\r\n        </div>\r\n    );\r\n}\r\nexport default connect(null, { load_thumbnails })(Thumbnails);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\n\r\nclass NavLink extends React.Component {\r\n\r\n    render() {\r\n        \r\n        var pathname  = this.props.location.pathname;\r\n        var isActive = pathname === this.props.to;\r\n        var className = isActive ? 'active' : '';\r\n\r\n        return(\r\n            <div className={className}>\r\n                <Link {...this.props}>\r\n                {this.props.children}\r\n            </Link>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nNavLink.contextTypes = {\r\n    router: PropTypes.object\r\n};\r\n\r\nexport default withRouter(props => <NavLink {...props}/>);;","import React from 'react';\r\nimport NavLink from './NavLink';\r\nimport './Header.css';\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    render () {\r\n\r\n        return(\r\n            <nav className=\"navibar\">\r\n            <ul>\r\n                <li><NavLink className=\"maio\" to=\"/\">Albums</NavLink></li>\r\n                <li><NavLink className=\"maio\" to=\"/photos\">Photos</NavLink></li>\r\n            </ul> \r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Header;\r\n\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux'; \r\nimport store from './redux/store';\r\nimport Album from './components/album/Album';\r\nimport { Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport Thumbnails from './components/thumbnail/Thumbnail';\r\nimport Header from './components/header/Header.js';\r\n// import { ALBUM_ID } from './components/album/Album';\r\n\r\nfunction App() {\r\n  // var photo_url = `photos?albumId=${ALBUM_ID}`;\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Header/>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Album}/>\r\n            <Route path=\"/photos\" exact component={Thumbnails}/>\r\n            <Redirect to='/'/>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}